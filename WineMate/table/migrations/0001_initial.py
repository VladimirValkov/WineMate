# Generated by Django 3.2.9 on 2022-01-22 07:52

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assortment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('year', models.TextField()),
            ],
            options={
                'db_table': 'assortment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Main',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_category', models.PositiveIntegerField()),
                ('id_vessel', models.PositiveIntegerField()),
                ('id_assortment', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
                ('stage', models.CharField(blank=True, max_length=50, null=True)),
                ('note', models.CharField(blank=True, max_length=50, null=True)),
                ('num_protocol', models.CharField(blank=True, max_length=50, null=True)),
                ('batch', models.CharField(blank=True, max_length=50, null=True)),
                ('alcohol', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('sugar', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('titr_acids', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('ph', models.DecimalField(blank=True, db_column='pH', decimal_places=3, max_digits=8, null=True)),
                ('vol_acids', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('rel_weight', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('mal_acids', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('lactic_acids', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('total_ext', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('so2', models.DecimalField(blank=True, db_column='SO2', decimal_places=3, max_digits=8, null=True)),
                ('o2', models.DecimalField(blank=True, db_column='O2', decimal_places=3, max_digits=8, null=True)),
                ('co2', models.DecimalField(blank=True, db_column='CO2', decimal_places=3, max_digits=8, null=True)),
                ('ntu', models.DecimalField(blank=True, db_column='NTU', decimal_places=3, max_digits=8, null=True)),
                ('assim_nitrgen', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('pecto_test', models.CharField(blank=True, max_length=1, null=True)),
                ('index_of_filt', models.IntegerField(blank=True, null=True)),
                ('fe', models.DecimalField(blank=True, db_column='Fe', decimal_places=3, max_digits=8, null=True)),
                ('cu', models.DecimalField(blank=True, db_column='Cu', decimal_places=3, max_digits=8, null=True)),
                ('sowing', models.CharField(blank=True, max_length=50, null=True)),
                ('sorb_acid', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('prot_stab', models.CharField(blank=True, max_length=50, null=True)),
                ('delta', models.CharField(blank=True, max_length=50, null=True)),
                ('cold_stab', models.CharField(blank=True, max_length=50, null=True)),
                ('h2o2', models.DecimalField(blank=True, db_column='H2O2', decimal_places=3, max_digits=8, null=True)),
                ('scheme', models.CharField(blank=True, max_length=50, null=True)),
                ('other_proc', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'main',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id_users', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'vessel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CellarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.Field()),
                ('assort', models.Field()),
                ('stage', models.Field()),
                ('note', models.Field()),
                ('alcohol', models.Field()),
                ('sugar', models.Field()),
                ('titr_acids', models.Field()),
                ('pH', models.Field()),
                ('vol_acids', models.Field()),
                ('rel_weight', models.Field()),
                ('mal_acids', models.Field()),
                ('lactic_acids', models.Field()),
                ('SO2', models.Field()),
                ('O2', models.Field()),
                ('CO2', models.Field()),
                ('NTU', models.Field()),
                ('assim_nitrgen', models.Field()),
                ('pecto_test', models.Field()),
            ],
        ),
    ]
